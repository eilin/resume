{"version":3,"sources":["serviceWorker.js","components/Summary.js","components/Skills.js","components/Experience.js","components/Contact.js","components/BurgerMenu.js","components/NavBarLink.js","components/CollapseMenu.js","components/Navigation.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Summary","Skills","Experience","Contact","BurgerMenu","props","Wrapper","onClick","handleNavbar","className","navbarState","styled","div","NavBarLink","exact","to","Nav","Link","text","CollapseMenu","open","useSpring","CollapseWrapper","style","transform","interpolate","range","output","openValue","NavLinks","animated","ul","FlexContainer","BurgerWrapper","Navigation","Navbar","bg","variant","Brand","href","Notfound","App","state","navbarOpen","setState","basename","this","path","component","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.412c0e63.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nfunction Summary() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Personal Summary</h2>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam at venenatis felis. Etiam porta malesuada enim ultricies commodo. Mauris vulputate turpis in justo pulvinar, in feugiat orci iaculis. Vivamus posuere velit sit amet nisi varius, sit amet maximus mi cursus. Donec semper tellus et est maximus condimentum. Etiam a lacinia dui. Fusce vehicula, nulla in posuere convallis, ex augue egestas ante, sed ullamcorper lacus risus id nulla. Mauris vulputate tortor diam, non lacinia massa vestibulum non. Etiam commodo nibh id nibh placerat consequat ac in neque. Curabitur sodales leo luctus elit commodo, vel auctor tellus tincidunt. Suspendisse blandit elementum lorem, eget lobortis leo rutrum sed. Etiam eget ultricies eros. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla hendrerit commodo nisi sed sodales. Etiam fringilla odio nec turpis mollis sodales. </p>\n\t\t</div>\n\t);\n}\n\nexport default Summary;","import React from 'react';\n\nfunction Skills() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Skills</h2>\n\t\t\t<p>Sed sem odio, consequat ac urna in, bibendum tincidunt libero. Praesent vitae auctor neque. Vestibulum at orci posuere, posuere sem vitae, auctor ligula. Maecenas et tincidunt turpis. Quisque sit amet quam id ipsum viverra auctor. Nulla mattis nulla vel purus dignissim fringilla. Donec sollicitudin nulla vel enim pulvinar, ac porta lacus rhoncus. Nulla ultricies sem eget dolor iaculis aliquam. Aliquam sed orci vulputate, semper metus eget, consequat felis.</p>\n\t\t</div>\n\t);\n}\n\nexport default Skills;","import React from 'react';\n\nfunction Experience() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Experience</h2>\n\t\t\t<p>Fusce aliquam ultrices enim, sit amet ultricies enim eleifend quis. Sed eget scelerisque eros. Pellentesque et nibh blandit, sagittis risus sed, condimentum ante. </p>\n\t\t</div>\n\t);\n}\n\nexport default Experience;","import React from 'react';\n\nfunction Contact() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Contact Me</h2>\n\t\t\t<p>Donec suscipit, nulla quis luctus eleifend, est mi tincidunt libero, sed posuere metus odio eget odio. Vivamus rhoncus pellentesque eleifend.</p>\n\t\t</div>\n\t);\n}\n\nexport default Contact;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst BurgerMenu = (props) => {\n\treturn (\n\t\t<Wrapper onClick={props.handleNavbar}>\n\t\t\t<div className={props.navbarState ? \"open\" : \"\"}>\n\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t<span>&nbsp;</span>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n}\n\nexport default BurgerMenu;\n\nconst Wrapper = styled.div`\n  position: relative;\n  padding-top: .7rem;\n  cursor: pointer;\n\tdisplay: block;\n  & span {\n    background: #fdcb6e;\n    display: block;\n    position: relative;\n    width: 3.5rem;\n    height: .4rem;\n    margin-bottom: .7rem;\n    transition: all ease-in-out 0.2s;\n\t}\n\t.open span:nth-child(1) {\n\t\ttransform: rotate(-45deg);\n\t\ttop: 18px;\n\t}\n\t.open span:nth-child(2) {\n\t\t\topacity: 0;\n  }\n\t.open span:nth-child(3) {\n\t\ttransform: rotate(45deg);\n\t\ttop: -18px\n\t}\n`;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nfunction NavBarLink(props) {\n\treturn (\n\t\t<LinkContainer exact to={props.to}>\n\t\t\t<Nav.Link onClick={props.onClick ? props.onClick : () => {}}>{props.text}</Nav.Link>\n\t\t</LinkContainer>\n\t);\n}\n\nexport default NavBarLink;","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport NavBarLink from './NavBarLink';\n\nconst CollapseMenu = (props) => {\n\tconst { open } = useSpring({ open: props.navbarState ? 0 : 1 });\n\n\tif (props.navbarState === true) {\n\t\treturn (\n\t\t\t<CollapseWrapper style={{\n\t\t\t\ttransform: open.interpolate({\n\t\t\t\t\trange: [0, 0.2, 0.3, 1],\n\t\t\t\t\toutput: [0, -20, 0, -200],\n\t\t\t\t}).interpolate(openValue => `translate3d(0, ${openValue}px, 0`),\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<NavLinks>\n\t\t\t\t\t<NavBarLink to=\"/\" onClick={props.handleNavbar} text=\"Summary\"/>\n\t\t\t\t\t<NavBarLink to=\"/skills\" onClick={props.handleNavbar} text=\"Skills\"/>\n\t\t\t\t\t<NavBarLink to=\"/experience\" onClick={props.handleNavbar} text=\"Experience\"/>\n\t\t\t\t\t<NavBarLink to=\"/contact\" onClick={props.handleNavbar} text=\"Contact\"/>\n\t\t\t\t</NavLinks>\n\t\t\t</CollapseWrapper>\n\t\t);\n\t}\n\treturn null;\n};\n\nexport default CollapseMenu;\n\nconst CollapseWrapper = styled(animated.div)`\n  background: #2d3436;\n\ttop: 4.5rem;\n\tfloat: right;\n`;\n\nconst NavLinks = styled.ul`\n  list-style-type: none;\n  padding: 2rem 1rem 2rem 2rem;\n  \n  & li {\n    transition: all 300ms linear 0s;\n  }\n  & a {\n    font-size: 1.4rem;\n    line-height: 2;\n    color: #dfe6e9;\n    text-transform: uppercase;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      color: #fdcb6e;\n      border-bottom: 1px solid #fdcb6e;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport styled from \"styled-components\";\nimport BurgerMenu from './BurgerMenu';\nimport CollapseMenu from './CollapseMenu';\nimport NavBarLink from './NavBarLink';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\theight: 5rem;\n\tmargin: 0 auto;\n`;\n\nconst NavLinks = styled(Nav)`\n  justify-self: end;\n  list-style-type: none;\n\tmargin: auto 0;\n  \n  & a {\n    color: #dfe6e9;\n    text-transform: uppercase;\n    font-weight: 600;\n    border-bottom: 1px solid transparent;\n    margin: 0 1.5rem;\n    transition: all 300ms linear 0s;\n    text-decoration: none;\n    cursor: pointer;\n    &:hover {\n      color: #fdcb6e;\n      border-bottom: 1px solid #fdcb6e;\n    }\n    @media (max-width: 768px) {\n      display: none;\n    }\n  }\n`;\n\nconst BurgerWrapper = styled.div`\n  margin: auto 0;\n  @media (min-width: 769px) {\n    display: none;\n\t}\n\tmargin-left: auto;\n`;\n\nfunction Navigation(props) {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/resume\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span >Edward Lin</span>\n\t\t\t\t\t\t<span className=\"cursive-nav-brand\">Résumé</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<FlexContainer>\n\t\t\t\t\t<NavLinks>\n\t\t\t\t\t\t<NavBarLink to=\"/\" text=\"Summary\"/>\n\t\t\t\t\t\t<NavBarLink to=\"/skills\" text=\"Skills\"/>\n\t\t\t\t\t\t<NavBarLink to=\"/experience\" text=\"Experience\"/>\n\t\t\t\t\t\t<NavBarLink to=\"/contact\" text=\"Contact\"/>\n\t\t\t\t\t</NavLinks>\n\t\t\t\t</FlexContainer>\n\t\t\t\t<div className=\"dummy-align\"/>\n\t\t\t\t<BurgerWrapper>\n\t\t\t\t\t<BurgerMenu\n\t\t\t\t\t\tnavbarState={props.navbarState} \n\t\t\t\t\t\thandleNavbar={props.handleNavbar}\n\t\t\t\t\t/>\n\t\t\t\t</BurgerWrapper>\n\t\t\t</Navbar>\n\t\t\t<CollapseMenu \n        navbarState={props.navbarState} \n\t\t\t\thandleNavbar={props.handleNavbar}\n      />\n\t\t</div>\n\t);\n}\n\nexport default Navigation;","import React, { Component } from 'react'\n// import GlobalStyle from './styles/Global';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Summary, Skills, Experience, Contact, Navigation } from './components';\n\nconst Notfound = () => <h1>Not found</h1>\n\n\nclass App extends Component {\n\tstate = {\n\t\tnavbarOpen: false\n\t}\n\n\thandleNavbar = () => {\n\t\tthis.setState({ navbarOpen: !this.state.navbarOpen });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Router basename='/resume'>\n\t\t\t\t\t<Navigation\n\t\t\t\t\t\tnavbarState={this.state.navbarOpen}\n\t\t\t\t\t\thandleNavbar={this.handleNavbar}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Summary} />\n\t\t\t\t\t\t<Route path=\"/skills\" component={Skills} />\n\t\t\t\t\t\t<Route path=\"/experience\" component={Experience} />\n\t\t\t\t\t\t<Route path=\"/contact\" component={Contact} />\n\t\t\t\t\t\t<Route component={Notfound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t\t{/* <GlobalStyle /> */}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}